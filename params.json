{"name":"Tadaa","body":"## Install\r\n\r\n    $ npm install tadaa\r\n\r\n## Requirements\r\n\r\nA command line executable audio player. \r\nTadaa defaults to 'aplay' (available for Linux systems) but the player can be configured. \r\n\r\n## Usage\r\n\r\nTada can play an up or a down sound, depending on whether the value you are monitoring goes up or down.\r\n\r\n    var tadaa = require('tadaa');\r\n    var interval = 60000;       // time in ms for which the value function is called\r\n    var up = 'up.wav';          // sound to play when value goes up\r\n    var down = 'down.wav';      // sound to play when value goes down\r\n    var audioPlayer = 'mplayer' // player used to play sounds, defaults to aplay\r\n    \r\n    // Function to call to get the value\r\n    var getValue = function(callback){\r\n        // ...my clever value logic...\r\n        callback(null, Math.random() * 100); } \r\n        \r\n    var getValueOptions = { a : 1, b : 2 }; // Data to pass to the function.\r\n    \r\n    tadaa.start(interval, up, down, getValue, getValueOptions, audioPlayer};\r\n    \r\n## Examples\r\n\r\nUse Tadaa to\r\n\r\n* Play a sound when a bug is raised or closed in your bug tracking system\r\n* Play a sound when a story is finished\r\n* Play a sound when your favourite team scores / conceeds.\r\n* etc...\r\n","tagline":"Monitor stuff via the medium of sound","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}
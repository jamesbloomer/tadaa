#!/usr/bin/env node

var tadaa = require('../lib/tadaa.js'),
    pivotaltracker = require('../lib/pivotaltracker.js'),
    program = require('commander');

program
    .version('0.0.3')
    .option('-i, --interval [interval]', 'The interval in ms for which to check the monitoring call', 60000)
    .option('-u, --up [up]', 'The sound to play when the monitored value goes up')
    .option('-d, --down [down]', 'The sound to play when the monitored value goes down')
		.option('-t --pttoken [pttoken]', 'A Pivotal Tracker API token')
		.option('-p --ptprojectid [ptprojectid]', 'A Pivotal Tracker project id');

var options;
var getValue;

var start = function() {
	tadaa.start(program.interval, program.up, program.down, getValue, options);
};

program
		.command('pivotaltracker')
		.description('monitor Pivotal Tracker')
		.action(function() {
			console.log('Monitoring Pivotal Tracker');
			options = { token: program.pttoken, projectId: program.ptprojectid };
			var pivotalFunctions = ['bugs', 'features'];
			console.log('Choose which story type to monitor:');
			program.choose(pivotalFunctions, function(i){
				switch(i) {
					case 0:
						getValue = pivotaltracker.getOpenBugs;
						break;

					case 1:
						getValue = pivotaltracker.getOpenFeatures;
						break;
				};

				start();
			});
		});
    
program.parse(process.argv);


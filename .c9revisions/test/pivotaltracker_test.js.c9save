{"ts":1354979867248,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var vows = require('vows'),\n\t\tshould = require('should'),\n\t\tsinon = require('sinon'),\n\t\tpivotal = require(\"pivotal\"),\n\t\tpivotaltracker = require('../lib/pivotaltracker.js');\n\nvows.describe('Tadaa Pivotal Tracker Tests')\n.addBatch({\n\t'when getOpenBugs called ' : {\n\t\ttopic : function() {\n\t\t\tsinon.stub(pivotal, 'useToken');\n\t\t\tsinon.stub(pivotal, 'getStories').yields(null);\n\t\t\tpivotaltracker.getOpenBugs({ token: \"myToken\", projectId: \"projectId\" }, this.callback);\n\t\t},\n\t\t'should not error' : function(err, result) {\n\t\t\tshould.not.exist(err);\n\t\t},\n\t\t'should call pivotal methods' : function(err, result) {\n\t\t\t// TODO change when token changes\n\t\t\tpivotal.useToken.calledWith('myToken').should.be.true;\n\t\t\tpivotal.getStories.calledWith('projectId', { filter: \"type:bug state:unscheduled,unstarted,started,finished,delivered,rejected\" }).should.be.true;\n\t\t},\n\t\t'should get correct story length' : function(err, result) {\n\t\t\t// TODO\n\t\t\tshould.not.exist(err);\n        }\n\t},\n\tteardown: function() {\n\t\tpivotal.useToken.restore();\n\t\tpivotal.getStories.restore();\n\t}\n})\n.export(module);\n"]],"start1":0,"start2":0,"length1":0,"length2":1079}]],"length":1079}

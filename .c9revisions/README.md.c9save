{"ts":1366892834729,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# Tadaa\n\nMonitor stuff via the medium of sound.\n\n[![Build Status](https://secure.travis-ci.org/jamesbloomer/tadaa.png?branch=master)](http://travis-ci.org/jamesbloomer/tadaa)\n\n## Install\n\n    $ npm install tadaa\n\n## Requirements\n\nA command line executable audio player. \nTadaa defaults to 'aplay' (available for Linux systems) but the player can be configured. \n\n## Usage\n\nTada can play an up or a down sound, depending on whether the value you are monitoring goes up or down.\n\n    var tadaa = require('tadaa');\n    var interval = 60000;       // time in ms for which the value function is called\n    var up = 'up.wav';          // sound to play when value goes up\n    var down = 'down.wav';      // sound to play when value goes down\n    var audioPlayer = 'mplayer' // player used to play sounds, defaults to aplay\n    \n    // Function to call to get the value\n    var getValue = function(callback){\n        // ...my clever value logic...\n        callback(null, Math.random() * 100); } \n        \n    var getValueOptions = { a : 1, b : 2 }; // Data to pass to the function.\n    \n    tadaa.start(interval, up, down, getValue, getValueOptions, audioPlayer};\n    \n## Examples\n\nUse Tadaa to\n\n* Play a sound when a bug is raised or closed in your bug tracking system\n* Play a sound when a story is finished\n* Play a sound when your favourite team scores / conceeds.\n* etc...\n\n[![endorse](http://api.coderwall.com/jamesbloomer/endorsecount.png)](http://coderwall.com/jamesbloomer)\n"]],"start1":0,"start2":0,"length1":0,"length2":1475}]],"length":1475}
{"contributors":[],"silentsave":false,"ts":1366892861058,"patch":[[{"diffs":[[0,"adaa');\n"],[1,"    var audioPlayer = 'mplayer' // player used to play sounds, defaults to aplay\n"],[0,"    var "]],"start1":504,"start2":504,"length1":16,"length2":97},{"diffs":[[0,"    "],[-1,"var audioPlayer = 'mplayer' // player used to play sounds, defaults to aplay"],[1,"\n    var fnup = function(currentValue, newValue) {\n        return newValue > currentValue;  \n    };\n"],[0,"\n   "]],"start1":816,"start2":816,"length1":84,"length2":108}]],"length":1580,"saved":false}
{"ts":1366892877606,"patch":[[{"diffs":[[0,"\n    };\n"],[1,"    "],[0,"\n    "],[1,"var fndown = function(currentValue, newValue) {\n        return newValue < currentValue;  \n    };\n"],[0,"\n    // "]],"start1":912,"start2":912,"length1":21,"length2":122}]],"length":1681,"saved":false}
{"ts":1366892924933,"patch":[[{"diffs":[[0,"al, "],[-1,"up, down"],[1,"[{fn: fnup, sound:up}, {fn: fndown, sound:down}]"],[0,", ge"]],"start1":1307,"start2":1307,"length1":16,"length2":56}]],"length":1721,"saved":false}
{"ts":1366892964954,"patch":[[{"diffs":[[0,"ay a"],[-1,"n up or a down"],[0," sou"]],"start1":384,"start2":384,"length1":22,"length2":8},{"diffs":[[0,"ing "],[-1,"on whether "],[0,"the "]],"start1":402,"start2":402,"length1":19,"length2":8},{"diffs":[[0,"ring"],[-1," goes up or down"],[0,".\n\n "]],"start1":430,"start2":430,"length1":24,"length2":8}]],"length":1680,"saved":false}
{"ts":1366893068111,"patch":[[{"diffs":[[0,"};\n    \n"],[1,"## TODO Tadaa functions included in the box\n\n"],[0,"## Examp"]],"start1":1358,"start2":1358,"length1":16,"length2":61}]],"length":1725,"saved":false}
{"ts":1366893100698,"patch":[[{"diffs":[[0," the box"],[1,"\n- up\n- down\n- nochange\n- zero"],[0,"\n\n## Exa"]],"start1":1401,"start2":1401,"length1":16,"length2":46}]],"length":1755,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366980382645,"patch":[[{"diffs":[[0," \n##"],[-1," TODO"],[0," Tad"]],"start1":1364,"start2":1364,"length1":13,"length2":8}]],"length":1750,"saved":false}
{"ts":1366980387175,"patch":[[{"diffs":[[0,"# Tadaa "],[1,"logic "],[0,"function"]],"start1":1367,"start2":1367,"length1":16,"length2":22}]],"length":1756,"saved":false}
